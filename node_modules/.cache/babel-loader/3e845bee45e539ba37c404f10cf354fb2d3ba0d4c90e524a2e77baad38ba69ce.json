{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vasfi Ocak\\\\Desktop\\\\Veysi\\\\development\\\\react-event-app\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json, redirect, defer, Await } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: event,\n      children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n        event: loadedEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return { isError: true, message: \"Could not fetch events\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    // \tstatus: 500,\n    // });\n    throw json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","redirect","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","resolve","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","loadedEvents","loadEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["C:/Users/Vasfi Ocak/Desktop/Veysi/development/react-event-app/frontend/src/pages/EventDetail.js"],"sourcesContent":["import {\r\n\tuseRouteLoaderData,\r\n\tjson,\r\n\tredirect,\r\n\tdefer,\r\n\tAwait,\r\n} from 'react-router-dom';\r\nimport EventItem from '../components/EventItem';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventDetailPage() {\r\n\tconst { event, events } = useRouteLoaderData('event-detail');\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Await resolve={event}>\r\n\t\t\t\t{(loadedEvent) => <EventItem event={loadedEvent} />}\r\n\t\t\t</Await>\r\n\t\t\t<Await resolve={events}>\r\n\t\t\t\t{(loadedEvents) => <EventsList events={loadEvents} />}\r\n\t\t\t</Await>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nasync function loadEvent(id) {\r\n\tconst response = await fetch('http://localhost:8080/events/' + id);\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow json(\r\n\t\t\t{ message: 'Could not fetch details for selected event.' },\r\n\t\t\t{ status: 500 }\r\n\t\t);\r\n\t} else {\r\n\t\tconst resData = await response.json();\r\n\t\treturn resData.events;\r\n\t}\r\n}\r\n\r\nasync function loadEvents() {\r\n\tconst response = await fetch('http://localhost:8080/events');\r\n\r\n\tif (!response.ok) {\r\n\t\t//return { isError: true, message: \"Could not fetch events\" };\r\n\t\t// throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\r\n\t\t// \tstatus: 500,\r\n\t\t// });\r\n\t\tthrow json({ message: 'Could not fetch events' }, { status: 500 });\r\n\t} else {\r\n\t\tconst resData = await response.json();\r\n\t\treturn resData.events;\r\n\t}\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n\tconst id = params.eventId;\r\n\treturn defer({\r\n\t\tevent: loadEvent(id),\r\n\t\tevents: loadEvents(),\r\n\t});\r\n}\r\n\r\nexport async function action({ params, request }) {\r\n\tconst eventId = params.eventId;\r\n\r\n\tconst response = await fetch('http://localhost:8080/events/' + eventId, {\r\n\t\tmethod: request.method,\r\n\t});\r\n\tif (!response.ok) {\r\n\t\tthrow json({ message: 'Could not delete event.' }, { status: 500 });\r\n\t}\r\n\treturn redirect('/events');\r\n}\r\n"],"mappings":";;AAAA,SACCA,kBAAkB,EAClBC,IAAI,EACJC,QAAQ,EACRC,KAAK,EACLC,KAAK,QACC,kBAAkB;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGd,kBAAkB,CAAC,cAAc,CAAC;EAE5D,oBACCQ,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACCP,OAAA,CAACJ,KAAK;MAACY,OAAO,EAAEH,KAAM;MAAAE,QAAA,EACnBE,WAAW,iBAAKT,OAAA,CAACH,SAAS;QAACQ,KAAK,EAAEI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACRb,OAAA,CAACJ,KAAK;MAACY,OAAO,EAAEF,MAAO;MAAAC,QAAA,EACpBO,YAAY,iBAAKd,OAAA,CAACF,UAAU;QAACQ,MAAM,EAAES;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA,eACP,CAAC;AAEL;AAACT,EAAA,CAbQD,eAAe;EAAA,QACGX,kBAAkB;AAAA;AAAAwB,EAAA,GADpCb,eAAe;AAexB,eAAeA,eAAe;AAE9B,eAAec,SAASA,CAACC,EAAE,EAAE;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,EAAE,CAAC;EAElE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IACjB,MAAM5B,IAAI,CACT;MAAE6B,OAAO,EAAE;IAA8C,CAAC,EAC1D;MAAEC,MAAM,EAAE;IAAI,CACf,CAAC;EACF,CAAC,MAAM;IACN,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAAC1B,IAAI,CAAC,CAAC;IACrC,OAAO+B,OAAO,CAAClB,MAAM;EACtB;AACD;AAEA,eAAeS,UAAUA,CAAA,EAAG;EAC3B,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACjB;IACA;IACA;IACA;IACA,MAAM5B,IAAI,CAAC;MAAE6B,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE,CAAC,MAAM;IACN,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAAC1B,IAAI,CAAC,CAAC;IACrC,OAAO+B,OAAO,CAAClB,MAAM;EACtB;AACD;AAEA,OAAO,eAAemB,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EACjD,MAAMT,EAAE,GAAGS,MAAM,CAACC,OAAO;EACzB,OAAOjC,KAAK,CAAC;IACZU,KAAK,EAAEY,SAAS,CAACC,EAAE,CAAC;IACpBZ,MAAM,EAAES,UAAU,CAAC;EACpB,CAAC,CAAC;AACH;AAEA,OAAO,eAAec,MAAMA,CAAC;EAAEF,MAAM;EAAED;AAAQ,CAAC,EAAE;EACjD,MAAME,OAAO,GAAGD,MAAM,CAACC,OAAO;EAE9B,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGQ,OAAO,EAAE;IACvEE,MAAM,EAAEJ,OAAO,CAACI;EACjB,CAAC,CAAC;EACF,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;IACjB,MAAM5B,IAAI,CAAC;MAAE6B,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACpE;EACA,OAAO7B,QAAQ,CAAC,SAAS,CAAC;AAC3B;AAAC,IAAAsB,EAAA;AAAAe,YAAA,CAAAf,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}