{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vasfi Ocak\\\\Desktop\\\\Veysi\\\\development\\\\react-event-app\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \" Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 23\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 24\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //return { isError: true, message: \"Could not fetch events\" };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    // \tstatus: 500,\n    // });\n    throw json({\n      message: 'Could not fetch events'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","Suspense","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["C:/Users/Vasfi Ocak/Desktop/Veysi/development/react-event-app/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData, json, defer, Await } from 'react-router-dom';\r\nimport { Suspense } from 'react';\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n\tconst { events } = useLoaderData();\r\n\r\n\treturn (\r\n\t\t<Suspense fallback={<p style={{ textAlign: 'center' }}> Loading...</p>}>\r\n\t\t\t<Await resolve={events}>\r\n\t\t\t\t{(loadedEvents) => <EventsList events={loadedEvents} />}\r\n\t\t\t</Await>\r\n\t\t</Suspense>\r\n\t);\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents() {\r\n\tconst response = await fetch('http://localhost:8080/events');\r\n\r\n\tif (!response.ok) {\r\n\t\t//return { isError: true, message: \"Could not fetch events\" };\r\n\t\t// throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\r\n\t\t// \tstatus: 500,\r\n\t\t// });\r\n\t\tthrow json({ message: 'Could not fetch events' }, { status: 500 });\r\n\t} else {\r\n\t\tconst resData = await response.json();\r\n\t\treturn resData.events;\r\n\t}\r\n}\r\nexport function loader() {\r\n\treturn defer({\r\n\t\tevents: loadEvents(),\r\n\t});\r\n}\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGV,aAAa,CAAC,CAAC;EAElC,oBACCO,OAAA,CAACH,QAAQ;IAACO,QAAQ,eAAEJ,OAAA;MAAGK,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eACtEP,OAAA,CAACJ,KAAK;MAACgB,OAAO,EAAET,MAAO;MAAAI,QAAA,EACpBM,YAAY,iBAAKb,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEU;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEb;AAACT,EAAA,CAVQD,UAAU;EAAA,QACCR,aAAa;AAAA;AAAAqB,EAAA,GADxBb,UAAU;AAYnB,eAAeA,UAAU;AAEzB,eAAec,UAAUA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACjB;IACA;IACA;IACA;IACA,MAAMxB,IAAI,CAAC;MAAEyB,OAAO,EAAE;IAAyB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE,CAAC,MAAM;IACN,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACtB,IAAI,CAAC,CAAC;IACrC,OAAO2B,OAAO,CAAClB,MAAM;EACtB;AACD;AACA,OAAO,SAASmB,MAAMA,CAAA,EAAG;EACxB,OAAO3B,KAAK,CAAC;IACZQ,MAAM,EAAEY,UAAU,CAAC;EACpB,CAAC,CAAC;AACH;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}