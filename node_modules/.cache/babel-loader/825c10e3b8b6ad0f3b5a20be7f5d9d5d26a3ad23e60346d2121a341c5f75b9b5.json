{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vasfi Ocak\\\\Desktop\\\\Veysi\\\\development\\\\react-event-app\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  console.log(eventData);\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  debugger;\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","console","log","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/Users/Vasfi Ocak/Desktop/Veysi/development/react-event-app/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\";\r\n\r\nfunction NewEventPage() {\r\n\treturn <EventForm />;\r\n}\r\n\r\nexport default NewEventPage;\r\n\r\nexport async function action({ request, params }) {\r\n\tconst data = await request.formData();\r\n\r\n\tconst eventData = {\r\n\t\ttitle: data.get(\"title\"),\r\n\t\timage: data.get(\"image\"),\r\n\t\tdate: data.get(\"date\"),\r\n\t\tdescription: data.get(\"description\"),\r\n\t};\r\n\r\n\tconsole.log(eventData);\r\n\r\n\tconst response = await fetch(\"http://localhost:8080/events\", {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t},\r\n\t\tbody: JSON.stringify(eventData),\r\n\t});\r\n\tdebugger;\r\n\tif (!response.ok) {\r\n\t\tthrow json({ message: \"Could not save event.\" }, { status: 500 });\r\n\t}\r\n\treturn redirect(\"/events\");\r\n}\r\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EACvB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,YAAY;AAIrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EACjD,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACjBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACpC,CAAC;EAEDI,OAAO,CAACC,GAAG,CAACP,SAAS,CAAC;EAEtB,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,SAAS;EAC/B,CAAC,CAAC;EACF;EACA,IAAI,CAACQ,QAAQ,CAACO,EAAE,EAAE;IACjB,MAAM/B,IAAI,CAAC;MAAEgC,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAClE;EACA,OAAOhC,QAAQ,CAAC,SAAS,CAAC;AAC3B;AAAC,IAAAS,EAAA;AAAAwB,YAAA,CAAAxB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}